version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: socialens-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: socialens
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_dev:/data/db
    networks:
      - socialens-network-dev

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: socialens-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - socialens-network-dev

  # Backend API (Development with hot reload)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: socialens-backend-dev
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/socialens?authSource=admin
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - socialens-network-dev

  # Celery Worker (Development)
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: socialens-celery-worker-dev
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/socialens?authSource=admin
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
      - backend
    command: celery -A workers.tasks.celery_app worker --loglevel=info --concurrency=1
    networks:
      - socialens-network-dev

  # Frontend (Development with hot reload)
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.dev
    container_name: socialens-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - socialens-network-dev

volumes:
  mongodb_data_dev:

networks:
  socialens-network-dev:
    driver: bridge 